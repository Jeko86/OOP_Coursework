/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package views;

import java.awt.Color;
import java.util.Date;
import java.util.Map;
import javax.swing.table.DefaultTableModel;
import models.Customer;
import models.DBManager;
import models.Order;
import models.OrderLine;

/**
 *
 * @author Giacomo
 */
public class ViewBasket extends javax.swing.JFrame {

    //adding the variable "loggedinCustomer" and "currentOrder" from the class Customer and Order to be accepted from the viewBasket
    private Customer loggedinCustomer;
    private Order currentOrder;
    /**
     * Creates new form ViewBasket
     */
     
    public ViewBasket(Customer customer, Order order) {
        loggedinCustomer = customer;
        currentOrder = order;
        //it set the background colour at the jframe page
        getContentPane().setBackground(Color.CYAN);
        initComponents();
        
        DefaultTableModel basketModel =(DefaultTableModel)tblBasket.getModel();
        
        for(Map.Entry<Integer, OrderLine> olEntry : currentOrder.getOrderLines().entrySet())
        {
            OrderLine orderLine = olEntry.getValue();
            //display the product's info previusly added 
            basketModel.addRow(new Object[] {
                orderLine.getProduct().getProductId(),
                orderLine.getProduct().getProductName(),
                "£" + String.format("%.2f", orderLine.getProduct().getPrice()),                
                orderLine.getQuantity()
            } 
            );           
        }
        //it set the label to display the current order total price with 2 decimal after coma 
        lblOrderTotal.setText(String.format("£"+"%.2f",currentOrder.getOrderTotal()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBasket = new javax.swing.JTable();
        btnRemoveSelectedProduct = new javax.swing.JButton();
        lblErrorMessage = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lblOrderTotal = new javax.swing.JLabel();
        btnBuy = new javax.swing.JButton();
        lblImage = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        btnBack.setBackground(new java.awt.Color(0, 102, 153));
        btnBack.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnBack.setText("ADD MORE PRODUCTS");
        btnBack.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        tblBasket.setBackground(new java.awt.Color(0, 204, 204));
        tblBasket.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        tblBasket.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ProductId", "Product", "Price", "Quantity"
            }
        ));
        jScrollPane1.setViewportView(tblBasket);

        btnRemoveSelectedProduct.setBackground(new java.awt.Color(255, 51, 51));
        btnRemoveSelectedProduct.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnRemoveSelectedProduct.setText("REMOVE SELECTED PRODUCT");
        btnRemoveSelectedProduct.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRemoveSelectedProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveSelectedProductActionPerformed(evt);
            }
        });

        lblErrorMessage.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblErrorMessage.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(java.awt.Color.black);
        jLabel1.setText("Total:  ");

        lblOrderTotal.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblOrderTotal.setText("jLabel2");

        btnBuy.setBackground(new java.awt.Color(0, 153, 102));
        btnBuy.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnBuy.setText("BUY ");
        btnBuy.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuy, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRemoveSelectedProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblOrderTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblErrorMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblErrorMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblImage, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBack, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(lblOrderTotal)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnRemoveSelectedProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnBuy, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        //by clicking the button it will be displayed the shopping page and will not be lost the data into the order basket 
        //becose it pass back "currrentOrder"
        ShoppingPage shoppingPage = new ShoppingPage(loggedinCustomer, currentOrder);
        this.dispose();
        shoppingPage.setVisible(true);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnRemoveSelectedProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveSelectedProductActionPerformed
        //getting the selected row from the table
        int selectRow = tblBasket.getSelectedRow();
        
        //if nothing is selected (-1) will be displayed an error message
        if (selectRow == -1) 
        {
            lblErrorMessage.setForeground(Color.red);
            lblImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/views/images/error.png")));
            lblErrorMessage.setText("Please Select the product would you like to remove");
        }
        else//if the "selectedRow" is selected (rownumber) with 0 as column number (which holds the objectID)
        {
            int productId = Integer.parseInt(String.valueOf(tblBasket.getValueAt(selectRow,0)));
            
            //called to the RemoveOrderLine method in the order Class to remove the selected object
            currentOrder.removeOrderLine((productId));
            //using the method calculateOrder is used to calucate the new total once an orderline is removed
            currentOrder.calculateOrdertotal();
            
            lblErrorMessage.setForeground(Color.BLACK);
            lblImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/views/images/stik.png")));
            lblErrorMessage.setText("Product succefully removed");
            //it set the label to display the new total of the current order once removed some product from the basket
            lblOrderTotal.setText(String.format("£"+ "%.2f",currentOrder.getOrderTotal()));
        
            //the next three lines of code just  refresh the basket table removing the line previusly eliminated fron it.
            DefaultTableModel basketModel = (DefaultTableModel)tblBasket.getModel();
            basketModel.removeRow(selectRow);
            tblBasket.setModel(basketModel);
        }
    }//GEN-LAST:event_btnRemoveSelectedProductActionPerformed

    private void btnBuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuyActionPerformed
        int numberOfOrderLines = 0;
        //this loop allows to know if the basket is empty the HashMap orderLine 
        for (Map.Entry<Integer, OrderLine> olEntry : currentOrder.getOrderLines().entrySet()) 
        {
            //add couter variable numberOfOrderLines
            numberOfOrderLines++;
        }
        
        //if the counter variable is equal to 0, the systeme will display an error message  
        if (numberOfOrderLines == 0) 
        {
            lblErrorMessage.setForeground(Color.red);
            lblImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/views/images/error.png")));
            lblErrorMessage.setText("Error: Basket Is Currently Empty");
        }
        else
        {
            currentOrder.setOrderDate(new Date());
            currentOrder.setStatus("Complete");
            
            //call the method writeOrder from the database to write currentorder data and the unique identified of the custome (Username) into the database
            DBManager db = new DBManager();
            int orderId = db.writeOrder(currentOrder, loggedinCustomer.getUsername());
            
            //this for loop has the purpose go through the current OrderLine and call WriteOrderLine and UpdateProductAbailability method
            //from the DBManager class once clicked the buy button to store then the orderline into the database           
            for (Map.Entry<Integer, OrderLine> olEntry : currentOrder.getOrderLines().entrySet()) 
            {
                OrderLine actualOrderLine = olEntry.getValue();  
                //call the WriteOrderLine method
                db.writeOrderLine(actualOrderLine, orderId);
                
                //call the UpdateProductAbailability method to upgrate the stockquantity of a product  
                db.updateProductAvailability(actualOrderLine.getProduct().getProductId(), actualOrderLine.getQuantity());
            }
            
            OrderConfirmation orderConfirmation = new OrderConfirmation(loggedinCustomer, currentOrder);
            this.dispose();
            orderConfirmation.setVisible(true);
        }
    }//GEN-LAST:event_btnBuyActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewBasket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewBasket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewBasket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewBasket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
              //      new ViewBasket().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnBuy;
    private javax.swing.JButton btnRemoveSelectedProduct;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblErrorMessage;
    private javax.swing.JLabel lblImage;
    private javax.swing.JLabel lblOrderTotal;
    private javax.swing.JTable tblBasket;
    // End of variables declaration//GEN-END:variables
}
