/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package views;

import java.awt.Color;
import java.util.HashMap;
import java.util.Map;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import models.Customer;
import models.DBManager;
import models.Order;
import models.OrderLine;
import models.Product;

/**
 *
 * @author Giacomo
 */
public class ShoppingPage extends javax.swing.JFrame {
    
    //Store the prodoct's info whithin load products in DBManager into the new objet Hashmap 
    private Customer loggedInCustomer;
    private HashMap<Integer, Product> products; 
    private Order currentOrder;//varible which represent the actual order and will be write into the order line 
    //it will be use inside buttons view basket and add to basket

    /**
     * Creates new form ShoppingPage
     */
    public ShoppingPage(Customer customer, Order order) {
        //it will allows to show  to show products when the page is loaded         
        loggedInCustomer = customer;
        currentOrder = order;
        
        DBManager db = new DBManager();
        products = db.loadProducts();
        //it set the background colour at the jframe page
        getContentPane().setBackground(Color.CYAN); 
        initComponents();
        
        //this if statemement hides btnAddToBasket, btnViewBasket, txtQuantity, lblQuantity
        //if the user is not regestered
        if(loggedInCustomer.getIsRegistered() == false)
        {
            btnAddToBasket.setVisible(false);
            btnViewBasket.setVisible(false);
            txtQuantity.setVisible(false);
            lblQuantity.setVisible(false);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        btnViewBasket = new javax.swing.JButton();
        btnAddToBasket = new javax.swing.JButton();
        lblProducts = new javax.swing.JLabel();
        lblCategory = new javax.swing.JLabel();
        lblProduct = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstCategories = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstProduct = new javax.swing.JList<>();
        txtQuantity = new javax.swing.JTextField();
        lblQuantity = new javax.swing.JLabel();
        lblErrorMessage = new javax.swing.JLabel();
        lblImage = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        btnBack.setBackground(new java.awt.Color(0, 102, 153));
        btnBack.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnBack.setText("Back");
        btnBack.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnViewBasket.setBackground(new java.awt.Color(0, 102, 153));
        btnViewBasket.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnViewBasket.setText("View Basket");
        btnViewBasket.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnViewBasket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewBasketActionPerformed(evt);
            }
        });

        btnAddToBasket.setBackground(new java.awt.Color(0, 153, 102));
        btnAddToBasket.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnAddToBasket.setText("Add To Basket");
        btnAddToBasket.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAddToBasket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddToBasketActionPerformed(evt);
            }
        });

        lblProducts.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblProducts.setText("PRODUCTS");

        lblCategory.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblCategory.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCategory.setText("CATEGORIES");

        lblProduct.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblProduct.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblProduct.setText("PRODUCT");

        lstCategories.setBackground(new java.awt.Color(0, 204, 204));
        lstCategories.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lstCategories.setForeground(java.awt.Color.black);
        lstCategories.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Clothing", "Footwear", " " };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        lstCategories.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstCategoriesValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstCategories);

        lstProduct.setBackground(new java.awt.Color(0, 204, 204));
        lstProduct.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lstProduct.setForeground(java.awt.Color.black);
        jScrollPane2.setViewportView(lstProduct);

        txtQuantity.setBackground(new java.awt.Color(0, 204, 204));
        txtQuantity.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        txtQuantity.setForeground(java.awt.Color.black);
        txtQuantity.setText("0");

        lblQuantity.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblQuantity.setForeground(java.awt.Color.black);
        lblQuantity.setText("Quantity");

        lblErrorMessage.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblErrorMessage.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1)
                            .addComponent(lblCategory, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(lblProducts)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnViewBasket, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblQuantity)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnAddToBasket))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                                        .addComponent(lblProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane2))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblErrorMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblProducts)
                        .addComponent(btnViewBasket, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCategory)
                    .addComponent(lblProduct))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblImage, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(lblErrorMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddToBasket, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblQuantity))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        if (loggedInCustomer.getIsRegistered()) 
        {
            //the JOptionPane will warm the user that if will go nack to the main menu, then the the object stored into the basked will be deleted  
            int dialogButton = JOptionPane.YES_NO_OPTION;

            int dialogResult = JOptionPane.showConfirmDialog(null, "Exiting will clear your basket, are you sure?",
                    "Warning", dialogButton);//construction of the JoptionPanel 
            if (dialogResult == JOptionPane.YES_OPTION)
            {
                //connect ShoppingPage to customerHome By the button
                CustomerHome customerHome = new CustomerHome(loggedInCustomer);
                this.dispose();
                customerHome.setVisible(true); 
            }              
        }
        else
        {
            MainMenu mainMenu = new MainMenu();
            this.dispose();
            mainMenu.setVisible(true);
        }        
        
    }//GEN-LAST:event_btnBackActionPerformed

    private void lstCategoriesValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstCategoriesValueChanged
        
        DefaultListModel productList = new DefaultListModel();
        
        //The product selected from the user is storend in a strind.
        String selectCategory = lstCategories.getSelectedValue();
        
         for (Map.Entry<Integer, Product> productEntry : products.entrySet()) 
        {
            //It is getted the selected product fron the Map.Entry
            Product product = productEntry.getValue();
            
            //The selected product is compared  with the category to which it belongs 
            //to return the element selected into the second list
            //"footwear" and "Clothing" are located into the source package "models"
           if (product.getClass().getName().equals("models." + selectCategory)) 
            {                
                productList.addElement(product);
            }
        }
        //lstProducts is the  second LidstBox "Products" where it will displayed the products held in the categories selected.
        lstProduct.setModel(productList);
    }//GEN-LAST:event_lstCategoriesValueChanged

    private void btnAddToBasketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddToBasketActionPerformed
        //the if statemen holds the code to display an error message if the user
        //does not select anyting (-1) and directly click the "addToBasket" Button   
       if(lstProduct.getSelectedIndex() == -1)
        {
            lblErrorMessage.setForeground(Color.red);
            lblImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/views/images/error.png")));
            lblErrorMessage.setText("Please select a product from the list.");
        }
        else
        {
            //to see the product availability it is need to convert the selected value into an Objcet
            //and for last into a prodoct cause the method .getselectedValue() returns a Strig
            Object selectProductObject = (Object)lstProduct.getSelectedValue();
            Product selectedProduct = (Product)selectProductObject;
            
            //this if statement allows to display an error massage which notice to the user 
            //that can't add the quantity selected because unavailable in stock (Database) 
            if(selectedProduct.getStockLevel() < Integer.parseInt(txtQuantity.getText()))
            {
                lblErrorMessage.setForeground(Color.red);
                lblImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/views/images/error.png")));
                lblErrorMessage.setText("the Quantity selected is not available.");
            }
            else if(Integer.parseInt(txtQuantity.getText()) <= 0)
            {
                lblErrorMessage.setForeground(Color.red);
                lblImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/views/images/error.png")));
                lblErrorMessage.setText("Please enter a valid quantity number.");
            }
            else
            {
                //create order line using a constructor from class OrderLine which does not hold the value lineTotal
                //which will be calculate from the the price
                //public OrderLine(int OrderLineIdIn, Product productIn, int quantityIn)
                OrderLine orderLine = new OrderLine(0, selectedProduct, Integer.parseInt(txtQuantity.getText()));//Integer.parseInt(txtQuantity.getText() get the quantity fron the txt quantity which will be use into the basket
                
                // currentOrder.addOrderLine(orderLine); insert a new order with an unique ID through the addOrderLine method previusly create into Order Class
                //if the input order (canBeadded == true) is true it will be displayed the confirmation message
                if (currentOrder.addOrderLine(orderLine)) 
                {
                    lblErrorMessage.setForeground(Color.BLACK);
                    lblImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/views/images/stik.png")));
                    lblErrorMessage.setText("Product Added To Basket");//set a message to confirm the user has added a new product to the basket
                    
                    //it calculates the total price of the product inserted on the basket ussing hte method created in the Order class
                    currentOrder.calculateOrdertotal();
                
                }
                //otherwise it will be displayed an error message 
                else
                {
                    lblErrorMessage.setForeground(Color.red);
                    lblImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/views/images/error.png")));
                    lblErrorMessage.setText("product already in the basket");
                }
            }
        }
    }//GEN-LAST:event_btnAddToBasketActionPerformed

    private void btnViewBasketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewBasketActionPerformed
        //Clicking the button the app will display the basket transporting to it the Customer and Order too
        ViewBasket viewBasket = new ViewBasket(loggedInCustomer, currentOrder);
        this.dispose();
        viewBasket.setVisible(true);
    }//GEN-LAST:event_btnViewBasketActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ShoppingPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ShoppingPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ShoppingPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ShoppingPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new ShoppingPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddToBasket;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnViewBasket;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblCategory;
    private javax.swing.JLabel lblErrorMessage;
    private javax.swing.JLabel lblImage;
    private javax.swing.JLabel lblProduct;
    private javax.swing.JLabel lblProducts;
    private javax.swing.JLabel lblQuantity;
    private javax.swing.JList<String> lstCategories;
    private javax.swing.JList<String> lstProduct;
    private javax.swing.JTextField txtQuantity;
    // End of variables declaration//GEN-END:variables
}
